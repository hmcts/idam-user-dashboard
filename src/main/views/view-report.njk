{% from "dist/govuk/components/input/macro.njk" import govukInput %}
{% from "dist/govuk/components/button/macro.njk" import govukButton %}
{% from "dist/govuk/components/warning-text/macro.njk" import govukWarningText %}
{% from "dist/govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "macros/csrf.njk" import csrfProtection %}
{% from "macros/breadcrumb.njk" import breadcrumb %}
{% from "macros/errorSummary.njk" import errorSummary %}
{% from "dist/govuk/components/table/macro.njk" import govukTable %}
{% from "dist/govuk/components/tag/macro.njk" import govukTag %}
{% from "dist/govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "dist/govuk/components/pagination/macro.njk" import govukPagination %}

{% extends "template.njk" %}

{% block pageTitle %}
  Generate report - IDAM User Dashboard - GOV.UK
{% endblock %}

{% block beforeContent %}
  {{ super() }}
  {{ breadcrumb([
    ['Generate report', urls.GENERATE_REPORT_URL],
    ['Report details']
  ]) }}
{% endblock %}

{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      {{ errorSummary(error) }}
      <h1 class="govuk-heading-l">Generated Report</h1>

      <div>
        <p class="govuk-body">
          Generated report of users which have
          {% for role in content.query %}
            '{{ role }}'
            {%- if not loop.last -%}
              {% if loop.index === loop.length-1 %}
                or
              {%- else -%}
                ,
              {%- endif -%}
            {%- endif -%}
          {% endfor %}
          role.
        </p>
      </div>

      {% if content.reportUUID %}
        <a id="downloadReport" href="{{ [ urls.GENERATE_REPORT_URL, '/', content.reportUUID, '/', 'download' ] | join }}">
          {{ govukButton({ text: "Download report (CSV)" }) }}
        </a>

        <script>
          document.addEventListener('DOMContentLoaded', function () {
            const currentURL = window.location.href;
            const downloadReport = document.getElementById('downloadReport');
            const actualButton = downloadReport.firstElementChild;
            actualButton.addEventListener("click", function () {
              downloadReport.disabled = true;
              actualButton.disabled = true;
            });
          });
        </script>
      {% else %}
        {{ govukButton({ text: "Download report (CSV)", disabled: true }) }}
      {% endif %}
    </div>
  </div>

  <div class="govuk-grid-row govuk-table">
      {% set users = [] %}
      {% for user in content.reportData %}

        {% set accountStateHTML %}
          {% if user.active %}
            {{ govukTag({ text: "Active" }) }}
          {% elif user.stale %}
            {{ govukTag({ text: "Archived", classes: "govuk-tag--green" }) }}
          {% else %}
            {{ govukTag({ text: "Suspended", classes: "govuk-tag--red" }) }}
          {% endif %}
        {% endset %}

        {% set accountViewHTML %}
          <a href="{{ urls.USER_DETAILS_URL | replace(":userUUID", user.id) }}" class="govuk-link" rel="noreferrer noopener" target="_blank">View user</a>
        {% endset %}

        {% set users = (users.push(
          [
            {
              html: accountStateHTML
            },
            {
              text: [ user.forename, ' ', user.surname ] | join
            },
            {
              text: user.email
            },
            {
              html: accountViewHTML
            }
          ]
        ), users) %}
      {% endfor %}

    <div class="govuk-grid-column-full">
      {{ govukTable({
        head: [
          {
            text: "Account state"
          },
          {
            text: "Name",
            classes: 'govuk-!-width-one-third'
          },
          {
            text: "Email",
            classes: 'govuk-!-width-one-third'
          },
          {
            text: ""
          }
        ],
        rows: users
      }) }}

      {{ govukPagination({
        previous: {
          href: "#"
        },
        next: {
          href: "#"
        },
        items: [ ]
      }) }}

      <script>
          document.addEventListener('DOMContentLoaded', function () {
            const currentURL = window.location.href;

            const [baseUrl, queryPart] = currentURL.split('?');
            const queryParams = new URLSearchParams(queryPart);
            const pageQP = queryParams.get('page');

            const pageNumber = pageQP ? parseInt(pageQP, 10) : 0;
            const previous = document.querySelector('[rel="prev"]');
            const next = document.querySelector('[rel="next"]');
            const prevURL = `${window.location.origin}${window.location.pathname}?page=${(pageNumber - 1)}`;
            const nextURL = `${window.location.origin}${window.location.pathname}?page=${(pageNumber + 1)}`;
            if (previous) {
              if (pageNumber < 1) {
                previous.parentElement.remove();
              } else {
                previous.href = prevURL;
              }
            }
            next.href = nextURL;
          });
      </script>

      {{ govukBackLink({
        text: "Back",
        href: urls.GENERATE_REPORT_URL
      }) }}
    </div>
  </div>
{% endblock %}
